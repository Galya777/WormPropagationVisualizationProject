# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/trusty64"
  config.vm.box_version = "20191107.0.0"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false
machines =[
 # Web segment (infected by Code Red)
    {name: "web1", ip: "192.168.56.11", script: "install_web.sh"},
    {name: "web2", ip: "192.168.56.12", script: "install_web.sh"},
    {name: "web3", ip: "192.168.56.13", script: "install_web.sh"},
    {name: "web4", ip: "192.168.56.14", script: "install_web.sh"},
    {name: "web5", ip: "192.168.56.15", script: "install_web.sh"},
    {name: "web6", ip: "192.168.56.16", script: "install_web.sh"},

    # Oracle segment (infected by Voyager)
    {name: "oracle1", ip: "192.168.57.11", script: "install_oracle.sh"},
    {name: "oracle2", ip: "192.168.57.12", script: "install_oracle.sh"},
    {name: "oracle3", ip: "192.168.57.13", script: "install_oracle.sh"},
    {name: "oracle4", ip: "192.168.57.14", script: "install_oracle.sh"},
    {name: "oracle5", ip: "192.168.57.15", script: "install_oracle.sh"},

    # Bridge VMs
    {name: "bridge1", ip: "192.168.59.11", script: "common.sh"},
    {name: "bridge2", ip: "192.168.59.12", script: "common.sh"},

    # Monitoring / control
    {name: "monitor", ip: "192.168.60.11", script: "install_monitor.sh"},
    {name: "control", ip: "192.168.60.12", script: "common.sh"},
]

machines.each do |machine|
    config.vm.define machine[:name] do |node|
        node.vm.hostname=machine[:name]
           node.vm.network "private_network", ip: machine[:ip]
      node.vm.provision "shell", path: "scripts/#{machine[:script]}"
      node.vm.provider "virtualbox" do |vb|
        vb.name = machine[:name]
        vb.memory = 512
        vb.cpus = 1
      end
    end
  end
  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Disable the default share of the current code directory. Doing this
  # provides improved isolation between the vagrant box and your host
  # by making sure your Vagrantfile isn't accessible to the vagrant box.
  # If you use this you may want to enable additional shared subfolders as
  # shown above.
  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
